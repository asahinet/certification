<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<!-- This file generated by Sakai App Builder -AZ -->
<beans>

	<!-- read in the hibernate.properties file properties -->
	<bean id="testPropertiesConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/hibernate.properties</value>
			</list>
		</property>
	</bean>

    <!-- define the list of HBM mapping files -->
    <bean id="certification.hbmMappingList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value>com/rsmart/certification/impl/hibernate/CertificateAwardHibernateImpl.hbm.xml</value>
                <value>com/rsmart/certification/impl/hibernate/CertificateDefinitionHibernateImpl.hbm.xml</value>
                <value>com/rsmart/certification/impl/hibernate/DocumentTemplateHibernateImpl.hbm.xml</value>
                <value>com/rsmart/certification/impl/hibernate/criteria/AbstractCriterionHibernateImpl.hbm.xml</value>
                <value>com/rsmart/certification/impl/hibernate/criteria/GradebookItemScoreCriterionHibernateImpl.hbm.xml</value>
            </list>
        </constructor-arg>
    </bean>

    <!-- create a data source (use the name Sakai uses) -->
    <bean id="javax.sql.DataSource"
            class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>${hibernate.connection.driver_class}</value></property>
        <property name="url"><value>${hibernate.connection.url}</value></property>
        <property name="username"><value>${hibernate.connection.username}</value></property>
        <property name="password"><value>${hibernate.connection.password}</value></property>
    </bean>

   <!-- create a SessionFactory bean from the data source and point it at our HBMs,
      name it the same as the Sakai global one so we can reuse our other spring files -->
   <bean id="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"
      class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
      <property name="dataSource" ref="javax.sql.DataSource" />
      <property name="mappingResources" ref="certification.hbmMappingList"/>
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
            <prop key="hibernate.query.substitutions">true 1, false 0</prop>
            <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
         </props>
      </property>
   </bean>

   <!-- Create a transaction manager from the SessionFactory,
      name it the same as the Sakai one so we can reuse our other spring config files -->
   <bean id="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"
      class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="sessionFactory"
         ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
   </bean>

    <bean id="com.rsmart.certification.mock.MockToolManager"
          class="com.rsmart.certification.mock.MockToolManager"/>
    <bean id="com.rsmart.certification.mock.MockUserDirectoryService"
          class="com.rsmart.certification.mock.MockUserDirectoryService"/>
    <bean id="com.rsmart.certification.mock.MockGradebookService"
          class="com.rsmart.certification.mock.MockGradebookService"/>

    <bean id="com.rsmart.certification.api.DocumentTemplateService"
          class="com.rsmart.certification.impl.DocumentTemplateServiceImpl">
        <property name="variableResolvers">
            <set>
                <bean class="com.rsmart.certification.mock.MockVariableResolver"/>
            </set>
        </property>
    </bean>

    <bean id="com.rsmart.certification.mock.MockDocumentTemplateRenderEngine"
          class="com.rsmart.certification.mock.MockDocumentTemplateRenderEngine"
          init-method="init">
        <property name="documentTemplateService"
                  ref="com.rsmart.certification.api.DocumentTemplateService"/>
    </bean>

    <bean id="com.rsmart.certification.impl.ITextDocumentTemplateRenderEngine"
          class="com.rsmart.certification.impl.ITextDocumentTemplateRenderEngine"
          init-method="init">
        <property name="documentTemplateService"
                  ref="com.rsmart.certification.api.DocumentTemplateService"/>
    </bean>

    <bean id="com.rsmart.certification.api.CertificateService"
          class="com.rsmart.certification.impl.hibernate.CertificateServiceHibernateImpl"
          init-method="init">
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
        <property name="documentTemplateService" ref="com.rsmart.certification.api.DocumentTemplateService"/>
        <property name="toolManager" ref="com.rsmart.certification.mock.MockToolManager"/>
        <property name="userDirectoryService" ref="com.rsmart.certification.mock.MockUserDirectoryService"/>
        <property name="templateDirectory" value="templates"/>
    </bean>

    <bean id="com.rsmart.certification.criteria.impl.gradebook.GradebookCriteriaFactory"
          class="com.rsmart.certification.criteria.impl.gradebook.GradebookCriteriaFactory"
          init-method="init">
        <property name="certificateService" ref="com.rsmart.certification.api.CertificateService"/>
        <property name="gradebookService" ref="com.rsmart.certification.mock.MockGradebookService"/>
        <property name="toolManager" ref="com.rsmart.certification.mock.MockToolManager"/>
        <property name="userDirectoryService" ref="com.rsmart.certification.mock.MockUserDirectoryService"/>
    </bean>
</beans>
